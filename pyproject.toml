[tool.poetry]
name = "ruff-sync"
version = "0.0.1.dev1"
description = "Syncronize ruff linter config settings accross projects"
authors = ["Gabriel Gore <gabriel59kg@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.scripts]
ruff-sync = "ruff_sync:main"

[tool.poetry.dependencies]
python = "^3.9"
httpx = "^0.27.0"
tomlkit = "^0.12.3"

[tool.poetry.group.dev.dependencies]
coverage = "^7.4.4"
invoke = "^2.2.0"
mypy = "^1.9.0"
pre-commit = "^3.7.0"
pyfakefs = "^5.3.5"
pytest = "^8.0.0"
pytest-asyncio = "^0.23.5"
pytest-icdiff = "^0.9"
respx = "^0.21.1"
ruamel-yaml = "^0.18.6"
ruff = "^0.3.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.9"
files = ["ruff_sync.py", "tests/", "tasks.py"]
strict = true
warn_unused_configs = true
ignore_missing_imports = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
implicit_reexport = false
disallow_any_generics = true
enable_error_code = ['ignore-without-code', 'explicit-override']

[[tool.mypy.overrides]]
module = "tests.*"
disable_error_code = ['type-arg', 'no-untyped-def']

[tool.ruff-sync]
exclude = ["per_file_ignores", "ignore"]

[tool.ruff]
target-version = "py39"
line-length = 90
lint.select = [
    # https://docs.astral.sh/ruff/rules/#flake8-async-async
    "ASYNC", # async rules
    # https://beta.ruff.rs/docs/rules/#pyflakes-f
    "F", # Pyflakes
    # https://beta.ruff.rs/docs/rules/#pycodestyle-e-w
    "E", # pycodestyle
    "W", # Warning
    # https://beta.ruff.rs/docs/rules/#flake8-comprehensions-c4
    # https://beta.ruff.rs/docs/rules/#mccabe-c90
    "C", # Complexity (mccabe+) & comprehensions
    # https://beta.ruff.rs/docs/rules/#pyupgrade-up
    "UP", # pyupgrade
    # https://beta.ruff.rs/docs/rules/#isort-i
    "I", # isort
    # https://beta.ruff.rs/docs/rules/#flake8-type-checking-tch
    "TCH", # flake8-type-checking-tch
    # https://beta.ruff.rs/docs/rules/#flake8-tidy-imports-tid
    "TID", # flake8-tidy-imports
    # https://beta.ruff.rs/docs/rules/#flake8-pyi-pyi
    "PYI", # flake8-pyi - type stub files
    # https://beta.ruff.rs/docs/rules/#flake8-use-pathlib-pth
    "PTH", # use-pathlib - use pathlib for os.path and glob operations
    # https://beta.ruff.rs/docs/rules/#flake8-bugbear-b
    "B", # bugbear - common python bugs & design issues
    # https://beta.ruff.rs/docs/rules/#flake8-datetimez-dtz
    "DTZ", # flake8-datetimez-dtz - prevent use of tz naive datetimes
    # https://beta.ruff.rs/docs/rules/#pylint-pl
    "PL", # pylint
    # https://docs.astral.sh/ruff/rules/#refurb-furb
    "FURB", # refurb - refactoring + modernization
    # https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
    "RUF",
    # https://docs.astral.sh/ruff/rules/#flake8-bandit-s
    "S", # bandit - security
    # https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
    "SIM", # simplify - simplify code
    # https://docs.astral.sh/ruff/rules/#flake8-slots-slot
    "SLOT", # slots - enforce __slots__ usage
]
lint.ignore = [
# formatting conflicts
# https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
"W191", # tab-indentation
"E111", # indentation-with-invalid-multiple
"E114", # indentation-with-invalid-multiple-comment
"E117", # over-indented
"D206", # indent-with-spaces
"D300", # triple-single-quotes
"Q000", # bad-quotes-inline-string
"Q001", # bad-quotes-multiline-string
"Q002", # bad-quotes-docstring
"Q003", # avoidable-escaped-quote
"COM812", # missing-trailing-comma
"COM819", # prohibited-trailing-comma
"ISC001", # single-line-implicit-string-concatenation
"ISC002", # multi-line-implicit-string-concatenation
]

[tool.coverage.run]
include = [
    "ruff_sync.py",
    ]

[tool.pytest.ini_options]
log_level = "INFO"
